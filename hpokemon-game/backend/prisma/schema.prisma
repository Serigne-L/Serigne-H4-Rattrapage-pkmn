// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String   @unique
  teams     Team[]   // Relation many-to-many avec Pokémon via la table Team
}

model Pokemon {
  id             Int           @id @default(autoincrement())
  name           String
  type           String
  hp             Int
  attack         Int
  defense        Int
  speed          Int
  specialAttack  Int
  specialDefense Int
  frontSprite    String        // URL du sprite de face du Pokémon
  backSprite     String        // URL du sprite de dos du Pokémon
  skills         PokemonSkill[]
  teams          Team[]        // Relation many-to-many avec User via la table Team
}

model PokemonSkill {
  id        Int      @id @default(autoincrement())
  name      String
  power     Int?
  accuracy  Int?
  pokemon   Pokemon  @relation(fields: [pokemonId], references: [id])
  pokemonId Int
}

model Team {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  pokemon   Pokemon  @relation(fields: [pokemonId], references: [id])
  pokemonId Int

  @@unique([userId, pokemonId])  // Empêcher les doublons dans l'équipe d'un utilisateur
}
